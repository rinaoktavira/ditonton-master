// Mocks generated by Mockito 5.3.2 from annotations
// in ditonton/test/presentation/pages/televisi_pages/televisi_detail_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i11;
import 'dart:ui' as _i12;

import 'package:ditonton/common/state_enum.dart' as _i9;
import 'package:ditonton/domain/entities/televisi_entities/televisi.dart'
    as _i10;
import 'package:ditonton/domain/entities/televisi_entities/televisi_detail.dart'
    as _i7;
import 'package:ditonton/domain/usecases/televisi_usecase/get_televisi_detail.dart'
    as _i2;
import 'package:ditonton/domain/usecases/televisi_usecase/get_televisi_recommendations.dart'
    as _i3;
import 'package:ditonton/domain/usecases/televisi_usecase/get_watchlist_status_televisi.dart'
    as _i4;
import 'package:ditonton/domain/usecases/televisi_usecase/remove_watchlist_televisi.dart'
    as _i6;
import 'package:ditonton/domain/usecases/televisi_usecase/save_watchlist_televisi.dart'
    as _i5;
import 'package:ditonton/presentation/provider/televisi_provider/televisi_detail_notifier.dart'
    as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetTelevisiDetail_0 extends _i1.SmartFake
    implements _i2.GetTelevisiDetail {
  _FakeGetTelevisiDetail_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetTelevisiRecommendations_1 extends _i1.SmartFake
    implements _i3.GetTelevisiRecommendations {
  _FakeGetTelevisiRecommendations_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetWatchListStatusTelevisi_2 extends _i1.SmartFake
    implements _i4.GetWatchListStatusTelevisi {
  _FakeGetWatchListStatusTelevisi_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSaveWatchlistTelevisi_3 extends _i1.SmartFake
    implements _i5.SaveWatchlistTelevisi {
  _FakeSaveWatchlistTelevisi_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoveWatchlistTelevisi_4 extends _i1.SmartFake
    implements _i6.RemoveWatchlistTelevisi {
  _FakeRemoveWatchlistTelevisi_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTelevisiDetail_5 extends _i1.SmartFake
    implements _i7.TelevisiDetail {
  _FakeTelevisiDetail_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TelevisiDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTelevisiDetailNotifier extends _i1.Mock
    implements _i8.TelevisiDetailNotifier {
  MockTelevisiDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetTelevisiDetail get getTelevisiDetail => (super.noSuchMethod(
        Invocation.getter(#getTelevisiDetail),
        returnValue: _FakeGetTelevisiDetail_0(
          this,
          Invocation.getter(#getTelevisiDetail),
        ),
      ) as _i2.GetTelevisiDetail);
  @override
  _i3.GetTelevisiRecommendations get getTelevisiRecommendations =>
      (super.noSuchMethod(
        Invocation.getter(#getTelevisiRecommendations),
        returnValue: _FakeGetTelevisiRecommendations_1(
          this,
          Invocation.getter(#getTelevisiRecommendations),
        ),
      ) as _i3.GetTelevisiRecommendations);
  @override
  _i4.GetWatchListStatusTelevisi get getWatchListStatusTelevisi =>
      (super.noSuchMethod(
        Invocation.getter(#getWatchListStatusTelevisi),
        returnValue: _FakeGetWatchListStatusTelevisi_2(
          this,
          Invocation.getter(#getWatchListStatusTelevisi),
        ),
      ) as _i4.GetWatchListStatusTelevisi);
  @override
  _i5.SaveWatchlistTelevisi get saveWatchlistTelevisi => (super.noSuchMethod(
        Invocation.getter(#saveWatchlistTelevisi),
        returnValue: _FakeSaveWatchlistTelevisi_3(
          this,
          Invocation.getter(#saveWatchlistTelevisi),
        ),
      ) as _i5.SaveWatchlistTelevisi);
  @override
  _i6.RemoveWatchlistTelevisi get removeWatchlistTelevisi =>
      (super.noSuchMethod(
        Invocation.getter(#removeWatchlistTelevisi),
        returnValue: _FakeRemoveWatchlistTelevisi_4(
          this,
          Invocation.getter(#removeWatchlistTelevisi),
        ),
      ) as _i6.RemoveWatchlistTelevisi);
  @override
  _i7.TelevisiDetail get televisi => (super.noSuchMethod(
        Invocation.getter(#televisi),
        returnValue: _FakeTelevisiDetail_5(
          this,
          Invocation.getter(#televisi),
        ),
      ) as _i7.TelevisiDetail);
  @override
  _i9.RequestState get televisiState => (super.noSuchMethod(
        Invocation.getter(#televisiState),
        returnValue: _i9.RequestState.Empty,
      ) as _i9.RequestState);
  @override
  List<_i10.Televisi> get televisiRecommendations => (super.noSuchMethod(
        Invocation.getter(#televisiRecommendations),
        returnValue: <_i10.Televisi>[],
      ) as List<_i10.Televisi>);
  @override
  _i9.RequestState get recommendationState => (super.noSuchMethod(
        Invocation.getter(#recommendationState),
        returnValue: _i9.RequestState.Empty,
      ) as _i9.RequestState);
  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: '',
      ) as String);
  @override
  bool get isAddedToWatchlistTelevisi => (super.noSuchMethod(
        Invocation.getter(#isAddedToWatchlistTelevisi),
        returnValue: false,
      ) as bool);
  @override
  String get watchlistMessageTelevisi => (super.noSuchMethod(
        Invocation.getter(#watchlistMessageTelevisi),
        returnValue: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i11.Future<void> fetchTelevisiDetail(int? id) => (super.noSuchMethod(
        Invocation.method(
          #fetchTelevisiDetail,
          [id],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> addWatchlistTelevisi(_i7.TelevisiDetail? televisi) =>
      (super.noSuchMethod(
        Invocation.method(
          #addWatchlistTelevisi,
          [televisi],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> removeFromWatchlistTelevisi(_i7.TelevisiDetail? televisi) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromWatchlistTelevisi,
          [televisi],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> loadWatchlistStatusTelevisi(int? id) => (super.noSuchMethod(
        Invocation.method(
          #loadWatchlistStatusTelevisi,
          [id],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  void addListener(_i12.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i12.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
